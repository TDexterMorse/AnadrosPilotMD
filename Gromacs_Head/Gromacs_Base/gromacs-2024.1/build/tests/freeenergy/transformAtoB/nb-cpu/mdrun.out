                      :-) GROMACS - gmx mdrun, 2024.1 (-:

Executable:   /home/ubuntu/W4GROMACSPIPE/Gromacs_Head/Gromacs_Base/gromacs-2024.1/build/bin/gmx
Data prefix:  /home/ubuntu/W4GROMACSPIPE/Gromacs_Head/Gromacs_Base/gromacs-2024.1 (source tree)
Working dir:  /home/ubuntu/W4GROMACSPIPE/Gromacs_Head/Gromacs_Base/gromacs-2024.1/build/tests/freeenergy/transformAtoB/nb-cpu
Command line:
  gmx mdrun -notunepme -nb cpu

Reading file topol.tpr, VERSION 2024.1 (single precision)

NOTE: Parallelization is limited by the small number of atoms,
      only starting 24 thread-MPI ranks.
      You can use the -nt and/or -ntmpi option to optimize the number of threads.

Changing nstlist from 10 to 40, rlist from 0.903 to 1.008

Using 24 MPI threads
Using 2 OpenMP threads per tMPI thread

starting mdrun 'Tryptophan Side Chain Analog'
60 steps,      0.1 ps.

Writing final coordinates.


Dynamic load balancing report:
 DLB was off during the run due to low measured imbalance.
 Average load imbalance: 30.4%.
 The balanceable part of the MD step is 26%, load imbalance is computed from this.
 Part of the total run time spent waiting due to load imbalance: 8.1%.

NOTE: 8.1 % of the available CPU time was lost due to load imbalance
      in the domain decomposition.
      Dynamic load balancing was automatically disabled, but it might be beneficial to manually turn it on (option -dlb yes.)
      You can also consider manually changing the decomposition (option -dd);
      e.g. by using fewer domains along the box dimension in which there is
      considerable inhomogeneity in the simulated system.

               Core t (s)   Wall t (s)        (%)
       Time:       13.653        0.289     4728.8
                 (ns/day)    (hour/ns)
Performance:       36.508        0.657

Thanx for Using GROMACS - Have a Nice Day

